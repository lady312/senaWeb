import { ElementRef, OnInit, Renderer2 } from '@angular/core';
import { ClassToggler } from '../toggle-classes';
import * as i0 from "@angular/core";
/**
 * Allows the sidebar to be toggled via click.
 */
export declare class SidebarToggleDirective implements OnInit {
    private classToggler;
    breakpoint: string | boolean;
    bp: string | boolean;
    constructor(classToggler: ClassToggler);
    ngOnInit(): void;
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SidebarToggleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SidebarToggleDirective, "[appSidebarToggler]", never, { "breakpoint": "appSidebarToggler"; }, {}, never, never, false>;
}
export declare class SidebarMinimizeDirective {
    private document;
    private renderer;
    constructor(document: any, renderer: Renderer2);
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SidebarMinimizeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SidebarMinimizeDirective, "[appSidebarMinimizer]", never, {}, {}, never, never, false>;
}
export declare class MobileSidebarToggleDirective {
    private document;
    private renderer;
    constructor(document: any, renderer: Renderer2);
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MobileSidebarToggleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MobileSidebarToggleDirective, "[appMobileSidebarToggler]", never, {}, {}, never, never, false>;
}
/**
 * Allows the off-canvas sidebar to be closed via click.
 */
export declare class SidebarOffCanvasCloseDirective {
    private document;
    private renderer;
    constructor(document: any, renderer: Renderer2);
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SidebarOffCanvasCloseDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SidebarOffCanvasCloseDirective, "[appSidebarClose]", never, {}, {}, never, never, false>;
}
export declare class BrandMinimizeDirective {
    private document;
    private renderer;
    constructor(document: any, renderer: Renderer2);
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrandMinimizeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrandMinimizeDirective, "[appBrandMinimizer]", never, {}, {}, never, never, false>;
}
/**
 * Allows the aside to be toggled via click.
 */
export declare class AsideToggleDirective implements OnInit {
    private classToggler;
    breakpoint: string | boolean;
    bp: string | boolean;
    constructor(classToggler: ClassToggler);
    ngOnInit(): void;
    toggleOpen($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AsideToggleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AsideToggleDirective, "[appAsideMenuToggler]", never, { "breakpoint": "appAsideMenuToggler"; }, {}, never, never, false>;
}
export declare class HtmlAttributesDirective implements OnInit {
    private renderer;
    private el;
    appHtmlAttr?: {
        [key: string]: string;
    };
    constructor(renderer: Renderer2, el: ElementRef);
    ngOnInit(): void;
    private setStyle;
    private addClass;
    private setAttrib;
    static ɵfac: i0.ɵɵFactoryDeclaration<HtmlAttributesDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<HtmlAttributesDirective, "[appHtmlAttr]", never, { "appHtmlAttr": "appHtmlAttr"; }, {}, never, never, false>;
}
