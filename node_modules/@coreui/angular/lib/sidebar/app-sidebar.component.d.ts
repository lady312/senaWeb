import { EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { AppSidebarService } from './app-sidebar.service';
import * as i0 from "@angular/core";
export declare class AppSidebarComponent implements OnInit, OnDestroy {
    private document;
    private renderer;
    private sidebarService;
    private subscriptionEvents;
    private _minimized;
    compact?: boolean;
    display: any;
    fixed?: boolean;
    offCanvas?: boolean;
    get minimized(): boolean;
    set minimized(value: boolean);
    /**
     * Emits whenever the minimized state of the sidebar changes.
     * Primarily used to facilitate two-way binding.
     */
    minimizedChange: EventEmitter<boolean>;
    sidebarClass: boolean;
    constructor(document: any, renderer: Renderer2, sidebarService: AppSidebarService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    isCompact(compact?: boolean | undefined): void;
    isFixed(fixed?: boolean | undefined): void;
    toggleMinimized(): void;
    isOffCanvas(offCanvas?: boolean | undefined): void;
    displayBreakpoint(display?: any): void;
    private _updateMinimized;
    static ɵfac: i0.ɵɵFactoryDeclaration<AppSidebarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AppSidebarComponent, "app-sidebar, cui-sidebar", never, { "compact": "compact"; "display": "display"; "fixed": "fixed"; "offCanvas": "offCanvas"; "minimized": "minimized"; }, { "minimizedChange": "minimizedChange"; }, never, ["*"], false>;
}
