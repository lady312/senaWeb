{"version":3,"file":"mydatepicker.component.d.ts","sources":["mydatepicker.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnChanges, SimpleChanges, ElementRef, ChangeDetectorRef, OnDestroy } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { IMyDate, IMyMonth, IMyCalendarMonth, IMyCalendarYear, IMyWeek, IMyOptions, IMyDateModel, IMyInputFieldChanged, IMyCalendarViewChanged, IMyInputFocusBlur } from \"./interfaces/index\";\nimport { LocaleService } from \"./services/mydatepicker.locale.service\";\nimport { UtilService } from \"./services/mydatepicker.util.service\";\nexport declare const MYDP_VALUE_ACCESSOR: any;\nexport declare class MyDatePicker implements OnChanges, ControlValueAccessor, OnDestroy {\n    elem: ElementRef;\n    private cdr;\n    private localeService;\n    private utilService;\n    options: IMyOptions;\n    locale: string;\n    defaultMonth: string;\n    selDate: string;\n    placeholder: string;\n    selector: number;\n    disabled: boolean;\n    dateChanged: EventEmitter<IMyDateModel>;\n    inputFieldChanged: EventEmitter<IMyInputFieldChanged>;\n    calendarViewChanged: EventEmitter<IMyCalendarViewChanged>;\n    calendarToggle: EventEmitter<number>;\n    inputFocusBlur: EventEmitter<IMyInputFocusBlur>;\n    selectorEl: ElementRef;\n    inputBoxEl: ElementRef;\n    onChangeCb: (_: any) => void;\n    onTouchedCb: () => void;\n    showSelector: boolean;\n    visibleMonth: IMyMonth;\n    selectedMonth: IMyMonth;\n    selectedDate: IMyDate;\n    weekDays: Array<string>;\n    dates: Array<IMyWeek>;\n    months: Array<Array<IMyCalendarMonth>>;\n    years: Array<Array<IMyCalendarYear>>;\n    selectionDayTxt: string;\n    invalidDate: boolean;\n    disableTodayBtn: boolean;\n    dayIdx: number;\n    selectMonth: boolean;\n    selectYear: boolean;\n    prevMonthDisabled: boolean;\n    nextMonthDisabled: boolean;\n    prevYearDisabled: boolean;\n    nextYearDisabled: boolean;\n    prevYearsDisabled: boolean;\n    nextYearsDisabled: boolean;\n    prevMonthId: number;\n    currMonthId: number;\n    nextMonthId: number;\n    opts: IMyOptions;\n    constructor(elem: ElementRef, cdr: ChangeDetectorRef, localeService: LocaleService, utilService: UtilService);\n    setLocaleOptions(): void;\n    setOptions(): void;\n    getSelectorTopPosition(): string;\n    resetMonthYearSelect(): void;\n    onSelectMonthClicked(event: any): void;\n    onMonthCellClicked(cell: IMyCalendarMonth): void;\n    onMonthCellKeyDown(event: any, cell: IMyCalendarMonth): void;\n    onSelectYearClicked(event: any): void;\n    onYearCellClicked(cell: IMyCalendarYear): void;\n    onYearCellKeyDown(event: any, cell: IMyCalendarYear): void;\n    onPrevYears(event: any, year: number): void;\n    onNextYears(event: any, year: number): void;\n    generateYears(year: number): void;\n    onUserDateInput(value: string): void;\n    onFocusInput(event: any): void;\n    onBlurInput(event: any): void;\n    onCloseSelector(event: any): void;\n    invalidInputFieldChanged(value: string): void;\n    isTodayDisabled(): void;\n    parseOptions(): void;\n    writeValue(value: any): void;\n    setDisabledState(disabled: boolean): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    removeBtnClicked(): void;\n    onDecreaseBtnClicked(): void;\n    onIncreaseBtnClicked(): void;\n    openBtnClicked(): void;\n    onClickListener: (event: MouseEvent) => void;\n    addGlobalListener(): void;\n    removeGlobalListener(): void;\n    onClickDocument(event: any): void;\n    openSelector(reason: number): void;\n    closeSelector(reason: number): void;\n    setVisibleMonth(): void;\n    onPrevMonth(): void;\n    onNextMonth(): void;\n    onPrevYear(): void;\n    onNextYear(): void;\n    onTodayClicked(): void;\n    onCellClicked(cell: any): void;\n    onCellKeyDown(event: any, cell: any): void;\n    clearDate(): void;\n    decreaseIncreaseDate(decrease: boolean): void;\n    selectDate(date: IMyDate, closeReason: number): void;\n    setFocusToInputBox(): void;\n    updateDateValue(date: IMyDate): void;\n    emitDateChanged(date: IMyDate): void;\n    getDateModel(date: IMyDate): IMyDateModel;\n    monthText(m: number): string;\n    monthStartIdx(y: number, m: number): number;\n    daysInMonth(m: number, y: number): number;\n    daysInPrevMonth(m: number, y: number): number;\n    isCurrDay(d: number, m: number, y: number, cmo: number, today: IMyDate): boolean;\n    getToday(): IMyDate;\n    getTimeInMilliseconds(date: IMyDate): number;\n    getWeekday(date: IMyDate): string;\n    getDate(year: number, month: number, day: number): Date;\n    sundayIdx(): number;\n    generateCalendar(m: number, y: number, notifyChange: boolean): void;\n    parseSelectedDate(selDate: any): IMyDate;\n    jsDateToMyDate(date: Date): IMyDate;\n    parseSelectedMonth(ms: string): IMyMonth;\n    setHeaderBtnDisabledState(m: number, y: number): void;\n}\n"]}