{"version":3,"file":"mydatepicker.util.service.d.ts","sources":["mydatepicker.util.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IMyDate } from \"../interfaces/my-date.interface\";\nimport { IMyDateRange } from \"../interfaces/my-date-range.interface\";\nimport { IMyMonth } from \"../interfaces/my-month.interface\";\nimport { IMyMonthLabels } from \"../interfaces/my-month-labels.interface\";\nimport { IMyMarkedDates } from \"../interfaces/my-marked-dates.interface\";\nimport { IMyMarkedDate } from \"../interfaces/my-marked-date.interface\";\nimport { IMyDateFormat } from \"../interfaces/my-date-format.interface\";\nexport declare class UtilService {\n    weekDays: Array<string>;\n    isDateValid(dateStr: string, dateFormat: string, minYear: number, maxYear: number, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableWeekDays: Array<string>, disableDays: Array<IMyDate>, disableDateRanges: Array<IMyDateRange>, monthLabels: IMyMonthLabels, enableDays: Array<IMyDate>): IMyDate;\n    getDateValue(dateStr: string, dateFormat: string, delimeters: Array<string>): Array<IMyDateFormat>;\n    getMonthNumberByMonthName(df: IMyDateFormat, monthLabels: IMyMonthLabels): number;\n    getNumberByValue(df: IMyDateFormat): number;\n    getDateFormatDelimeters(dateFormat: string): Array<string>;\n    parseDefaultMonth(monthString: string): IMyMonth;\n    formatDate(date: IMyDate, dateFormat: string, monthLabels: IMyMonthLabels): string;\n    preZero(val: number): string;\n    isDisabledDay(date: IMyDate, minYear: number, maxYear: number, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableWeekDays: Array<string>, disableDays: Array<IMyDate>, disableDateRanges: Array<IMyDateRange>, enableDays: Array<IMyDate>): boolean;\n    isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate;\n    isHighlightedDate(date: IMyDate, sunHighlight: boolean, satHighlight: boolean, highlightDates: Array<IMyDate>): boolean;\n    getWeekNumber(date: IMyDate): number;\n    isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean;\n    isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean;\n    isInitializedDate(date: IMyDate): boolean;\n    isSameDate(d1: IMyDate, d2: IMyDate): boolean;\n    getTimeInMilliseconds(date: IMyDate): number;\n    getDayNumber(date: IMyDate): number;\n    getWeekDays(): Array<string>;\n    getWeekdayIndex(wd: string): number;\n}\n"]}